{"version":3,"sources":["assets/img/logo.jpg","store/actions/index.js","store/actions/video.js","store/actions/api.js","store/reducers/api.js","store/actions/watch.js","store/api/youtube-api-response-types.js","services/url/index.js","store/reducers/videos.js","containers/SideBar/SideBarItem/SideBarItem.js","containers/SideBar/SideBarHeader/SideBarHeader.js","containers/SideBar/Subscriptions/Subscription/Subscription.js","containers/SideBar/Subscriptions/Subscriptions.js","containers/SideBar/SideBarFooter/SideBarFooter.js","containers/SideBar/SideBar.js","components/VideoGrid/VideoGridHeader/VideoGridHeader.js","services/number/number-format.js","services/date/date-format.js","components/VideoPreview/VideoPreview.js","components/VideoGrid/VideoGrid.js","components/InfiniteScroll/InfiniteScroll.js","containers/Home/HomeContent/HomeContent.js","containers/Home/Home.js","components/Video/Video.js","components/Rating/Rating.js","components/VideoMetadata/VideoMetadata.js","components/VideoInfoBox/VideoInfoBox.js","containers/Comments/CommentsHeader/CommentsHeader.js","containers/Comments/AddComment/AddComment.js","containers/Comments/Comment/Comment.js","containers/Comments/Comments.js","components/RelatedVideos/NextUpVideo/NextUpVideo.js","components/RelatedVideos/RelatedVideos.js","store/reducers/channels.js","store/actions/comment.js","store/reducers/comments.js","containers/Watch/WatchContent/WatchContent.js","containers/Watch/Watch.js","containers/Header/Header.js","components/ScrollToTop/ScrollToTop.js","components/Layout/Layout.js","components/VideoList/VideoList.js","containers/Trending/Trending.js","store/actions/search.js","store/reducers/search.js","containers/Search/Search.js","App.js","serviceWorker.js","store/reducers/index.js","store/api/youtube-api.js","store/sagas/video.js","store/sagas/watch.js","store/sagas/comment.js","store/sagas/search.js","store/sagas/index.js","index.js","store/configureStore.js"],"names":["module","exports","__webpack_require__","p","createAction","type","payload","arguments","length","undefined","Object","objectSpread","REQUEST","SUCCESS","FAILURE","createRequestTypes","base","Error","reduce","acc","concat","MOST_POPULAR","mostPopular","request","amount","loadDescription","nextPageToken","success","response","failure","VIDEO_CATEGORIES","categories","MOST_POPULAR_BY_CATEGORY","mostPopularByCategory","youtubeLibraryLoaded","bind","initialState","libraryLoaded","getYoutubeLibraryLoaded","state","api","WATCH_DETAILS","details","videoId","channelId","VIDEO_DETAILS","videoDetails","VIDEO_LIST_RESPONSE","SEARCH_LIST_RESPONSE","CHANNEL_LIST_RESPONSE","COMMENT_THREAD_LIST_RESPONSE","getSearchParam","location","name","search","URLSearchParams","get","byId","getMostPopularVideos","createSelector","videos","videosById","items","map","getVideoCategoryIds","keys","getVideosByCategory","byCategory","videosByCategory","accumulator","categoryId","videoIds","videoCategoriesLoaded","videosByCategoryLoaded","getVideoById","getRelatedVideos","related","relatedVideoIds","relatedVideoId","filter","video","getChannelId","snippet","getAmountComments","Number","statistics","commentCount","getMostPopular","getMostPopularVideosNextPageToken","allMostPopularVideosLoaded","totalResults","withRouter","props","highlight","path","pathname","includes","react_default","a","createElement","react_router_dom","to","Menu","Item","className","Icon","size","icon","label","SideBarHeader","heading","title","toUpperCase","Header","Subscription","broadcasting","amountNewVideos","rightElement","Image","src","avatar","Subscriptions","Fragment","SideBarHeader_SideBarHeader","Subscription_Subscription","SideBarFooter","SideBar","borderless","vertical","stackable","fixed","SideBar_SideBarItem_SideBarItem","Divider","Subscriptions_Subscriptions","SideBarFooter_SideBarFooter","VideoGridHeader","UNITS","getShortNumberString","number","digits","some","element","index","lowerBound","Math","pow","i","decimal","toFixed","toString","objMap","numbers","datePattern","timePattern","pattern","RegExp","getVideoDurationString","iso8601DateString","_parseISO8601TimePatt","match","slice","prev","next","idx","parseFloat","days","hours","minutes","seconds","secondsString","minutesString","accumulatedHours","padStart","join","TimeAgo","locale","en","timeAgo","VideoPreview","videoDuration","contentDetails","duration","viewAndTimeString","publicationDate","Date","publishedAt","viewCount","viewCountShort","format","getFormattedViewAndTime","description","expanded","classNames","horizontal","thumbnails","medium","url","channelTitle","VideoGrid","gridItems","VideoPreview_VideoPreview","key","id","divider","hideDivider","VideoGridHeader_VideoGridHeader","InfiniteScroll","children","react_waypoint_es","onEnter","bottomReachedCallback","Loader","active","showLoader","inline","AMOUNT_TRENDING_VIDEOS","connect","mostPopularVideos","trendingVideos","categoryGrids","categoryTitles","categoryTitle","VideoGrid_VideoGrid","getVideoGridsForCategories","InfiniteScroll_InfiniteScroll","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","categoryIndex","assertThisInitialized","fetchCategoriesAndMostPopularVideos","prevProps","videoCategories","fetchVideosByCategory","fetchMostPopularVideos","fetchVideoCategories","categoryStartIndex","fetchMostPopularVideosByCategory","setState","prevState","SideBar_SideBar_SideBar","Home_HomeContent_HomeContent","shouldShowLoader","React","Component","dispatch","videoActions","bindActionCreators","BASE_EMBED_URL","Video","embedUrl","frameBorder","allow","allowFullScreen","Rating","rating","likeCount","dislikeCount","amountLikes","amountDislikes","percentagePositiveRatings","Progress","percent","VideoMetadata","toLocaleString","Rating_Rating","Button","basic","labelPosition","VideoInfoBox","_useState","useState","_useState2","slicedToArray","collapsed","setCollapsed","channel","descriptionParagraphs","videoDescription","split","paragraph","dist_default","getDescriptionParagraphs","_getConfig","descriptionTextClass","buttonTitle","publishedAtString","parse","toDateString","buttonText","subscriberCount","getSubscriberButtonText","channelThumbnail","circular","color","compact","onClick","CommentsHeader","amountComments","AddComment","Form","TextArea","control","placeholder","Comment","comment","topLevelComment","_topLevelComment$snip","authorProfileImageUrl","authorDisplayName","textOriginal","Comments","comments","Comment_Comment","CommentsHeader_CommentsHeader","AddComment_AddComment","NextUpVideo","Checkbox","toggle","defaultChecked","RelatedVideos","nextUpVideo","relatedVideosPreviews","relatedVideo","NextUpVideo_NextUpVideo","getChannel","channels","COMMENT_THREAD","thread","byVideo","reduceCommentThread","newComments","item","prevCommentIds","ids","commentIds","toConsumableArray","byVideoComment","defineProperty","getCommentsForVideo","allComments","commentId","getCommentNextPageToken","relatedVideos","Video_Video","VideoMetadata_VideoMetadata","VideoInfoBox_VideoInfoBox","RelatedVideos_RelatedVideos","Watch","fetchMoreComments","fetchWatchContent","getVideoId","history","push","fetchWatchDetails","fetchCommentThread","Watch_WatchContent_WatchContent","watchActions","commentActions","queryString","setQueryString","header","logo","onSubmit","escapedSearchQuery","encodeURI","Field","Input","action","value","onChange","event","target","position","_ref","useEffect","window","scrollTo","Layout","components_ScrollToTop_ScrollToTop","containers_Header_Header","VideoList","Trending","fetchTrendingVideos","loaderActive","VideoList_VideoList","fetchMoreVideos","SEARCH_FOR_VIDEOS","forVideos","searchQuery","getSearchResults","results","getSearchNextPageToken","Search","getSearchQuery","searchForVideos","youtubeApiLoaded","searchResults","searchActions","script","document","API_KEY","process","REACT_APP_YOUTUBE_KEY","onload","gapi","load","client","setApiKey","body","appendChild","loadYoutubeApi","Layout_Layout","react_router","exact","component","render","containers_Watch_Watch","containers_Search_Search","Boolean","hostname","combineReducers","videoMap","hasOwnProperty","pageInfo","reduceFetchMostPopularVideos","categoryMapping","category","reduceFetchVideoCategories","responses","byCategoryMap","forEach","status","_groupVideosByIdAndCa","groupVideosByIdAndCategory","result","reduceFetchMostPopularVideosByCategory","find","r","kind","relatedEntry","_relatedVideosRespons","reduceRelatedVideosRequest","reduceWatchDetails","parsedVideos","reduceVideoDetails","channelResponse","channelEntry","res","query","prevResults","reduceSearchForVideos","buildApiRequest","requestMethod","params","properties","removeEmptyParams","resource","normalizedProps","substr","adjustedName","replace","prop","propArray","ref","pa","createResource","method","buildMostPopularVideosRequest","fields","part","chart","maxResults","regionCode","pageToken","videoCategoryId","buildVideoDetailRequest","buildRelatedVideosRequest","relatedToVideoId","buildChannelRequest","buildCommentThreadRequest","buildSearchRequest","q","watchMostPopularVideos","watchVideoCategories","watchMostPopularVideosByCategory","regenerator_default","wrap","_context","take","sent","fork","stop","_marked","_context2","fetchEntity","_marked2","_context3","takeEvery","_marked3","_ref2","_context4","_marked4","requests","_context5","wrapper","ignoreErrors","all","put","t0","_marked5","watchWatchDetails","fetchVideoDetails","watch_marked","fn","watch_marked2","shouldFetchChannelInfo","searchListResponse","videoDetailResponse","_responses","watch_marked3","watchCommentThread","comment_marked","comment_marked2","watchSearchForVideos","search_marked","search_marked2","_callee","sagas_marked","entity","_len","args","_key","_args2","Array","apply","sagas_marked2","_len2","_key2","ignoreErrorCallback","then","store","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducer","applyMiddleware","run","rootSaga","configureStore","ReactDOM","es","basename","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efc6a9ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.551cce21.jpg\";","export function createAction(type, payload = {}) {\r\n  return {\r\n    type,\r\n    ...payload\r\n  };\r\n}\r\n\r\nexport const REQUEST = 'REQUEST';\r\nexport const SUCCESS = 'SUCCESS';\r\nexport const FAILURE = 'FAILURE';\r\n\r\nexport function createRequestTypes(base) {\r\n  if (!base) {\r\n    throw new Error(\"cannot create request type with base = '' or base = null\");\r\n  }\r\n  return [REQUEST, SUCCESS, FAILURE].reduce((acc, type) => {\r\n    acc[type] = `${base}_${type}`;\r\n    return acc;\r\n  }, {});\r\n}\r\n","import {\r\n  createAction,\r\n  createRequestTypes,\r\n  REQUEST,\r\n  SUCCESS,\r\n  FAILURE\r\n} from './index';\r\n\r\nexport const MOST_POPULAR = createRequestTypes('MOST_POPULAR');\r\nexport const mostPopular = {\r\n  request: (amount, loadDescription, nextPageToken) =>\r\n    createAction(MOST_POPULAR[REQUEST], {\r\n      amount,\r\n      loadDescription,\r\n      nextPageToken\r\n    }),\r\n  success: response => createAction(MOST_POPULAR[SUCCESS], { response }),\r\n  failure: response => createAction(MOST_POPULAR[FAILURE], { response })\r\n};\r\n\r\nexport const VIDEO_CATEGORIES = createRequestTypes('VIDEO_CATEGORIES');\r\nexport const categories = {\r\n  request: () => createAction(VIDEO_CATEGORIES[REQUEST]),\r\n  success: response => createAction(VIDEO_CATEGORIES[SUCCESS], { response }),\r\n  failure: response => createAction(VIDEO_CATEGORIES[FAILURE], { response })\r\n};\r\n\r\nexport const MOST_POPULAR_BY_CATEGORY = createRequestTypes(\r\n  'MOST_POPULAR_BY_CATEGORY'\r\n);\r\nexport const mostPopularByCategory = {\r\n  request: categories =>\r\n    createAction(MOST_POPULAR_BY_CATEGORY[REQUEST], { categories }),\r\n  success: (response, categories) =>\r\n    createAction(MOST_POPULAR_BY_CATEGORY[SUCCESS], { response, categories }),\r\n  failure: response => createAction(MOST_POPULAR_BY_CATEGORY[FAILURE], response)\r\n};\r\n","import { createAction } from './index';\r\n\r\nexport const YOUTUBE_LIBRARY_LOADED = 'YOUTUBE_LIBRARY_LOADED';\r\nexport const youtubeLibraryLoaded = createAction.bind(\r\n  null,\r\n  YOUTUBE_LIBRARY_LOADED\r\n);\r\n","import { YOUTUBE_LIBRARY_LOADED } from '../actions/api';\r\n\r\nconst initialState = {\r\n  libraryLoaded: false\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case YOUTUBE_LIBRARY_LOADED:\r\n      return {\r\n        libraryLoaded: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport const getYoutubeLibraryLoaded = state => state.api.libraryLoaded;\r\n","import {\r\n  createAction,\r\n  createRequestTypes,\r\n  FAILURE,\r\n  REQUEST,\r\n  SUCCESS\r\n} from './index';\r\n\r\nexport const WATCH_DETAILS = createRequestTypes('WATCH_DETAILS');\r\nexport const details = {\r\n  request: (videoId, channelId) =>\r\n    createAction(WATCH_DETAILS[REQUEST], { videoId, channelId }),\r\n  success: (response, videoId) =>\r\n    createAction(WATCH_DETAILS[SUCCESS], { response, videoId }),\r\n  failure: response => createAction(WATCH_DETAILS[FAILURE], { response })\r\n};\r\n\r\nexport const VIDEO_DETAILS = createRequestTypes('VIDEO_DETAILS');\r\nexport const videoDetails = {\r\n  request: () => {\r\n    throw Error('not implemented');\r\n  },\r\n  success: response => createAction(VIDEO_DETAILS[SUCCESS], { response }),\r\n  failure: response => createAction(VIDEO_DETAILS[FAILURE], { response })\r\n};\r\n","export const VIDEO_LIST_RESPONSE = 'youtube#videoListResponse';\r\nexport const SEARCH_LIST_RESPONSE = 'youtube#searchListResponse';\r\nexport const CHANNEL_LIST_RESPONSE = 'youtube#channelListResponse';\r\nexport const COMMENT_THREAD_LIST_RESPONSE = 'youtube#commentThreadListResponse';\r\n","export const getSearchParam = (location, name) => {\r\n  if (!location || !location.search) {\r\n    return null;\r\n  }\r\n  const searchParams = new URLSearchParams(location.search);\r\n  return searchParams.get(name);\r\n};\r\n","import { createSelector } from 'reselect';\r\nimport {\r\n  MOST_POPULAR,\r\n  VIDEO_CATEGORIES,\r\n  MOST_POPULAR_BY_CATEGORY\r\n} from '../actions/video';\r\nimport { VIDEO_DETAILS, WATCH_DETAILS } from '../actions/watch';\r\nimport { SUCCESS } from '../actions';\r\nimport {\r\n  VIDEO_LIST_RESPONSE,\r\n  SEARCH_LIST_RESPONSE\r\n} from '../api/youtube-api-response-types';\r\nimport { getSearchParam } from '../../services/url/index';\r\n\r\nexport const initialState = {\r\n  byId: {},\r\n  mostPopular: {},\r\n  categories: {}\r\n};\r\nexport default function videos(state = initialState, action) {\r\n  switch (action.type) {\r\n    case MOST_POPULAR[SUCCESS]:\r\n      return reduceFetchMostPopularVideos(action.response, state);\r\n    case VIDEO_CATEGORIES[SUCCESS]:\r\n      return reduceFetchVideoCategories(action.response, state);\r\n    case MOST_POPULAR_BY_CATEGORY[SUCCESS]:\r\n      return reduceFetchMostPopularVideosByCategory(\r\n        action.response,\r\n        action.categories,\r\n        state\r\n      );\r\n    case WATCH_DETAILS[SUCCESS]:\r\n      return reduceWatchDetails(action.response, state);\r\n    case VIDEO_DETAILS[SUCCESS]:\r\n      return reduceVideoDetails(action.response, state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceFetchMostPopularVideos(response, prevState) {\r\n  const videoMap = response.items.reduce((accumulator, video) => {\r\n    accumulator[video.id] = video;\r\n    return accumulator;\r\n  }, {});\r\n\r\n  let items = Object.keys(videoMap);\r\n  if (response.hasOwnProperty('prevPageToken') && prevState.mostPopular) {\r\n    items = [...prevState.mostPopular.items, ...items];\r\n  }\r\n\r\n  const mostPopular = {\r\n    totalResults: response.pageInfo.totalResults,\r\n    nextPageToken: response.nextPageToken,\r\n    items\r\n  };\r\n\r\n  return {\r\n    ...prevState,\r\n    mostPopular,\r\n    byId: { ...prevState.byId, ...videoMap }\r\n  };\r\n}\r\n\r\nexport const getMostPopularVideos = createSelector(\r\n  state => state.videos.byId,\r\n  state => state.videos.mostPopular,\r\n  (videosById, mostPopular) => {\r\n    if (!mostPopular || !mostPopular.items) {\r\n      return [];\r\n    }\r\n    return mostPopular.items.map(videoId => videosById[videoId]);\r\n  }\r\n);\r\n\r\nfunction reduceFetchVideoCategories(response, prevState) {\r\n  const categoryMapping = response.items.reduce((accumulator, category) => {\r\n    accumulator[category.id] = category.snippet.title;\r\n    return accumulator;\r\n  }, {});\r\n  return {\r\n    ...prevState,\r\n    categories: categoryMapping\r\n  };\r\n}\r\n\r\nexport const getVideoCategoryIds = createSelector(\r\n  state => state.videos.categories,\r\n  categories => {\r\n    return Object.keys(categories || {});\r\n  }\r\n);\r\n\r\nfunction reduceFetchMostPopularVideosByCategory(\r\n  responses,\r\n  categories,\r\n  prevState\r\n) {\r\n  let videoMap = {};\r\n  let byCategoryMap = {};\r\n\r\n  responses.forEach((response, index) => {\r\n    // ignore answer if there was an error\r\n    if (response.status === 400) return;\r\n\r\n    const categoryId = categories[index];\r\n    const { byId, byCategory } = groupVideosByIdAndCategory(response.result);\r\n    videoMap = { ...videoMap, ...byId };\r\n    byCategoryMap[categoryId] = byCategory;\r\n  });\r\n\r\n  function groupVideosByIdAndCategory(response) {\r\n    const videos = response.items;\r\n    const byId = {};\r\n    const byCategory = {\r\n      totalResults: response.pageInfo.totalResults,\r\n      nextPageToken: response.nextPageToken,\r\n      items: []\r\n    };\r\n\r\n    videos.forEach(video => {\r\n      byId[video.id] = video;\r\n\r\n      const items = byCategory.items;\r\n      if (items && items) {\r\n        items.push(video.id);\r\n      } else {\r\n        byCategory.items = [video.id];\r\n      }\r\n    });\r\n\r\n    return { byId, byCategory };\r\n  }\r\n\r\n  // compute new state\r\n  return {\r\n    ...prevState,\r\n    byId: { ...prevState.byId, ...videoMap },\r\n    byCategory: { ...prevState.byCategory, ...byCategoryMap }\r\n  };\r\n}\r\n\r\nexport const getVideosByCategory = createSelector(\r\n  state => state.videos.byCategory,\r\n  state => state.videos.byId,\r\n  state => state.videos.categories,\r\n  (videosByCategory, videosById, categories) => {\r\n    return Object.keys(videosByCategory || {}).reduce(\r\n      (accumulator, categoryId) => {\r\n        const videoIds = videosByCategory[categoryId].items;\r\n        const categoryTitle = categories[categoryId];\r\n        accumulator[categoryTitle] = videoIds.map(\r\n          videoId => videosById[videoId]\r\n        );\r\n        return accumulator;\r\n      },\r\n      {}\r\n    );\r\n  }\r\n);\r\n\r\nexport const videoCategoriesLoaded = createSelector(\r\n  state => state.videos.categories,\r\n  categories => {\r\n    return Object.keys(categories || {}).length !== 0;\r\n  }\r\n);\r\n\r\nexport const videosByCategoryLoaded = createSelector(\r\n  state => state.videos.byCategory,\r\n  videosByCategory => {\r\n    return Object.keys(videosByCategory || {}).length;\r\n  }\r\n);\r\n\r\nfunction reduceWatchDetails(responses, prevState) {\r\n  const videoDetailResponse = responses.find(\r\n    r => r.result.kind === VIDEO_LIST_RESPONSE\r\n  );\r\n  // we know that items will only have one element\r\n  // because we explicitly asked for a video with a specific id\r\n  const video = videoDetailResponse.result.items[0];\r\n  const relatedEntry = reduceRelatedVideosRequest(responses);\r\n\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      [video.id]: video\r\n    },\r\n    related: {\r\n      ...prevState.related,\r\n      [video.id]: relatedEntry\r\n    }\r\n  };\r\n}\r\n\r\nexport const getVideoById = (state, videoId) => {\r\n  return state.videos.byId[videoId];\r\n};\r\n\r\nfunction reduceRelatedVideosRequest(responses) {\r\n  const relatedVideosResponse = responses.find(\r\n    r => r.result.kind === SEARCH_LIST_RESPONSE\r\n  );\r\n  const { pageInfo, items, nextPageToken } = relatedVideosResponse.result;\r\n  const relatedVideoIds = items.map(video => video.id.videoId);\r\n\r\n  return {\r\n    totalResults: pageInfo.totalResults,\r\n    nextPageToken,\r\n    items: relatedVideoIds\r\n  };\r\n}\r\n\r\nfunction reduceVideoDetails(responses, prevState) {\r\n  const videoResponses = responses.filter(\r\n    response => response.result.kind === VIDEO_LIST_RESPONSE\r\n  );\r\n  const parsedVideos = videoResponses.reduce((videoMap, response) => {\r\n    // we're explicitly asking for a video with a particular id\r\n    // so the response set must either contain 0 items (if a video with the id does not exist)\r\n    // or at most one item (i.e. the channel we've been asking for)\r\n    const video = response.result.items ? response.result.items[0] : null;\r\n    if (!video) {\r\n      return videoMap;\r\n    }\r\n    videoMap[video.id] = video;\r\n    return videoMap;\r\n  }, {});\r\n\r\n  return {\r\n    ...prevState,\r\n    byId: { ...prevState.byId, ...parsedVideos }\r\n  };\r\n}\r\n\r\nconst getRelatedVideoIds = (state, videoId) => {\r\n  const related = state.videos.related && state.videos.related[videoId];\r\n  return related ? related.items : [];\r\n};\r\nexport const getRelatedVideos = createSelector(\r\n  getRelatedVideoIds,\r\n  state => state.videos.byId,\r\n  (relatedVideoIds, videos) => {\r\n    if (relatedVideoIds) {\r\n      // filter kicks out null values we might have\r\n      return relatedVideoIds\r\n        .map(relatedVideoId => videos[relatedVideoId])\r\n        .filter(video => video);\r\n    }\r\n    return [];\r\n  }\r\n);\r\n\r\nexport const getChannelId = (state, location, name) => {\r\n  const videoId = getSearchParam(location, name);\r\n  const video = state.videos.byId[videoId];\r\n  if (video) {\r\n    return video.snippet.channelId;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getAmountComments = createSelector(\r\n  getVideoById,\r\n  video => {\r\n    if (video) {\r\n      return Number(video.statistics.commentCount);\r\n    }\r\n    return 0;\r\n  }\r\n);\r\n\r\nconst getMostPopular = state => state.videos.mostPopular;\r\nexport const getMostPopularVideosNextPageToken = createSelector(\r\n  getMostPopular,\r\n  mostPopular => {\r\n    return mostPopular.nextPageToken;\r\n  }\r\n);\r\n\r\nexport const allMostPopularVideosLoaded = createSelector(\r\n  [getMostPopular],\r\n  mostPopular => {\r\n    const amountFetchedItems = mostPopular.items ? mostPopular.items.length : 0;\r\n    return amountFetchedItems === mostPopular.totalResults;\r\n  }\r\n);\r\n","import React from 'react';\r\nimport './SideBarItem.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Icon, Menu } from 'semantic-ui-react';\r\n\r\nfunction SideBarItem(props) {\r\n  const highlight = shouldBeHighlighted() ? 'highlight-item' : null;\r\n\r\n  function shouldBeHighlighted() {\r\n    if (props.path === '/') {\r\n      return props.location.pathname === props.path;\r\n    }\r\n    return props.location.pathname.includes(props.path);\r\n  }\r\n\r\n  return (\r\n    <Link to={{ pathname: props.path }}>\r\n      <Menu.Item className={`sidebar-item ${highlight}`}>\r\n        <div className=\"sidebar-item-alignment-container\">\r\n          <span>\r\n            <Icon size=\"large\" name={props.icon} />{' '}\r\n          </span>\r\n          <span>{props.label}</span>\r\n        </div>\r\n      </Menu.Item>\r\n    </Link>\r\n  );\r\n}\r\n\r\nSideBarItem.propTypes = {\r\n  location: PropTypes.object,\r\n  path: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  label: PropTypes.string\r\n};\r\n\r\nexport default withRouter(SideBarItem);\r\n","import React from 'react';\r\nimport './SideBarHeader.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nexport function SideBarHeader(props) {\r\n  const heading = props.title ? props.title.toUpperCase() : '';\r\n  return (\r\n    <Menu.Item>\r\n      <Menu.Header className=\"side-bar-header\">{heading}</Menu.Header>\r\n    </Menu.Item>\r\n  );\r\n}\r\n\r\nSideBarHeader.propTypes = {\r\n  title: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport './Subscription.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, Image, Menu } from 'semantic-ui-react';\r\n\r\nexport function Subscription(props) {\r\n  const { broadcasting, amountNewVideos, label } = props;\r\n\r\n  let rightElement = null;\r\n  if (broadcasting) {\r\n    rightElement = <Icon name=\"signal\" />;\r\n  } else if (amountNewVideos) {\r\n    rightElement = <span className=\"new-videos-count\">{amountNewVideos}</span>;\r\n  }\r\n\r\n  return (\r\n    <Menu.Item>\r\n      <div className=\"subscription\">\r\n        <div>\r\n          <Image src=\"https://via.placeholder.com/28x28\" avatar />\r\n          <span>{label}</span>\r\n        </div>\r\n        {rightElement}\r\n      </div>\r\n    </Menu.Item>\r\n  );\r\n}\r\n\r\nSubscription.propTypes = {\r\n  broadcasting: PropTypes.bool,\r\n  amountNewVideos: PropTypes.number,\r\n  label: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport { Subscription } from './Subscription/Subscription';\r\nimport { SideBarHeader } from '../SideBarHeader/SideBarHeader';\r\n\r\nexport const Subscriptions = () => (\r\n  <>\r\n    <SideBarHeader title=\"Subscriptions\" />\r\n    <Subscription label=\"MusicChannel\" broadcasting />\r\n    <Subscription label=\"freeCodeCamp\" amountNewVideos={10} />\r\n    <Subscription label=\"Udemy\" amountNewVideos={4} />\r\n    <Subscription label=\"Frontend Masters\" amountNewVideos={23} />\r\n    <Subscription label=\"Academnd\" amountNewVideos={16} />\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport './SideBarFooter.scss';\r\n\r\nexport function SideBarFooter() {\r\n  return (\r\n    <>\r\n      <div className=\"footer-block\">\r\n        <div>\r\n          <span>About</span> <span>Press</span> <span>Copyright</span>\r\n        </div>\r\n        <div>\r\n          <span>Contact Us</span>\r\n          <span>Creators</span>\r\n        </div>\r\n        <div>\r\n          <span>Advertise</span>\r\n          <span>Developers</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"footer-block\">\r\n        <div>\r\n          <span>Terms</span> <span>Privacy</span>\r\n          <span>Policy & Safety</span>\r\n        </div>\r\n        <div>Test new features</div>\r\n      </div>\r\n      <div className=\"footer-block\">\r\n        <div>© Utube.com - A Youtube clone for learing purposes .</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport SideBarItem from './SideBarItem/SideBarItem';\r\nimport { SideBarHeader } from './SideBarHeader/SideBarHeader';\r\nimport { Subscriptions } from './Subscriptions/Subscriptions';\r\nimport { SideBarFooter } from './SideBarFooter/SideBarFooter';\r\nimport { Menu, Divider } from 'semantic-ui-react';\r\nimport './SideBar.scss';\r\n\r\nexport const SideBar = () => (\r\n  <Menu borderless vertical stackable fixed=\"left\" className=\"side-nav\">\r\n    <SideBarItem path=\"/\" label=\"Home\" icon=\"home\" />\r\n    <SideBarItem path=\"/feed/trending\" label=\"Trending\" icon=\"fire\" />\r\n    <SideBarItem label=\"Followers\" icon=\"spy\" />\r\n    <Divider />\r\n    <SideBarItem label=\"Library\" icon=\"folder\" />\r\n    <SideBarItem label=\"History\" icon=\"history\" />\r\n    <SideBarItem label=\"Watch later\" icon=\"clock\" />\r\n    <SideBarItem label=\"Liked videos\" icon=\"thumbs up\" />\r\n    <Divider />\r\n    <Subscriptions />\r\n    <Divider />\r\n    <SideBarHeader title=\"More from Youtube\" />\r\n    <SideBarItem label=\"Movies and Shows\" icon=\"film\" />\r\n    <Divider />\r\n    <SideBarItem label=\"Report history\" icon=\"flag\" />\r\n    <SideBarItem label=\"Help\" icon=\"help circle\" />\r\n    <SideBarItem label=\"Send feedback\" icon=\"comment\" />\r\n    <Divider />\r\n    <SideBarFooter />\r\n  </Menu>\r\n);\r\n","import React from 'react';\r\nimport './VideoGridHeader.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function VideoGridHeader(props) {\r\n  return (\r\n    <div className=\"video-grid-header\">\r\n      <span className=\"title\">{props.title}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nVideoGridHeader.propTypes = {\r\n  title: PropTypes.string\r\n};\r\n","const UNITS = ['K', 'M', 'B', 'T'];\r\n\r\n// https://stackoverflow.com/a/28608086/2328833\r\nexport function getShortNumberString(number) {\r\n  const shouldShowDecimalPlace = UNITS.some((element, index) => {\r\n    const lowerBound = Math.pow(1000, index + 1);\r\n    const upperBound = lowerBound + lowerBound * 10;\r\n    return number > lowerBound && number < upperBound;\r\n  });\r\n  const digits = shouldShowDecimalPlace ? 1 : 0;\r\n  for (let i = UNITS.length - 1; i >= 0; i--) {\r\n    const decimal = Math.pow(1000, i + 1);\r\n\r\n    if (number >= decimal) {\r\n      return (number / decimal).toFixed(digits) + UNITS[i];\r\n    }\r\n  }\r\n  return number.toString();\r\n}\r\n","const objMap = ['years', 'months', 'days', 'hours', 'minutes', 'seconds'];\r\nconst numbers = '\\\\d+(?:[\\\\.,]\\\\d{0,3})?';\r\nconst datePattern = `(${numbers}Y)?(${numbers}M)?(${numbers}D)?`;\r\nconst timePattern = `T(${numbers}H)?(${numbers}M)?(${numbers}S)?`;\r\nconst pattern = new RegExp(`P(?:${datePattern}(?:${timePattern})?)`);\r\n\r\nexport function parseISO8601TimePattern(durationString) {\r\n  // https://github.com/tolu/ISO8601-duration/blob/master/src/index.js\r\n  return durationString\r\n    .match(pattern)\r\n    .slice(1)\r\n    .reduce((prev, next, idx) => {\r\n      prev[objMap[idx]] = parseFloat(next) || 0;\r\n      return prev;\r\n    }, {});\r\n}\r\n\r\nexport function getVideoDurationString(iso8601DateString) {\r\n  if (!iso8601DateString || iso8601DateString === '') {\r\n    return '';\r\n  }\r\n\r\n  // new Date(Date.parse(...)) doesn't work here\r\n  // therefore we are using our regex approach\r\n  let { days, hours, minutes, seconds } = parseISO8601TimePattern(\r\n    iso8601DateString\r\n  );\r\n\r\n  let secondsString = seconds.toString();\r\n  let minutesString = minutes.toString();\r\n  let accumulatedHours = days * 24 + hours;\r\n\r\n  if (seconds < 10) {\r\n    secondsString = seconds.toString().padStart(2, '0');\r\n  }\r\n  if (minutes < 10 && hours !== 0) {\r\n    minutesString = minutesString.toString().padStart(2, '0');\r\n  }\r\n  if (!accumulatedHours) {\r\n    return [minutesString, secondsString].join(':');\r\n  } else {\r\n    return [accumulatedHours, minutesString, secondsString].join(':');\r\n  }\r\n}\r\n\r\nexport function getPublishedAtDateString(iso8601DateString) {\r\n  if (!iso8601DateString) {\r\n    return '';\r\n  }\r\n  const date = new Date(Date.parse(iso8601DateString));\r\n  return date.toDateString();\r\n}\r\n","import React from 'react';\r\nimport './VideoPreview.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\nimport { getShortNumberString } from '../../services/number/number-format';\r\nimport { getVideoDurationString } from '../../services/date/date-format';\r\nimport classNames from 'classnames';\r\n\r\nTimeAgo.locale(en);\r\nconst timeAgo = new TimeAgo('en-US');\r\n\r\nexport function VideoPreview(props) {\r\n  const { video } = props;\r\n  if (!video) {\r\n    return <div />;\r\n  }\r\n  const duration = video.contentDetails ? video.contentDetails.duration : null;\r\n  const videoDuration = getVideoDurationString(duration);\r\n  const viewAndTimeString = getFormattedViewAndTime(video);\r\n  const description = props.expanded ? video.snippet.description : null;\r\n\r\n  function videoPreviewClass() {\r\n    return classNames('video-preview', {\r\n      horizontal: props.horizontal,\r\n      expanded: props.expanded\r\n    });\r\n  }\r\n\r\n  function getFormattedViewAndTime(video) {\r\n    const publicationDate = new Date(video.snippet.publishedAt);\r\n    const viewCount = video.statistics ? video.statistics.viewCount : null;\r\n    if (viewCount) {\r\n      const viewCountShort = getShortNumberString(video.statistics.viewCount);\r\n      return `${viewCountShort} views • ${timeAgo.format(publicationDate)}`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  return (\r\n    <Link to={{ pathname: props.pathname, search: props.search }}>\r\n      <div className={videoPreviewClass()}>\r\n        <div className=\"image-container\">\r\n          <Image src={video.snippet.thumbnails.medium.url} />\r\n          <div className=\"time-label\">\r\n            <span>{videoDuration}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"video-info\">\r\n          <div\r\n            className={classNames('semi-bold', 'show-max-two-lines', {\r\n              expanded: props.expanded\r\n            })}\r\n          >\r\n            {video.snippet.title}\r\n          </div>\r\n          <div className=\"video-preview-metadata-container\">\r\n            <div className=\"channel-title\">{video.snippet.channelTitle}</div>\r\n            <div>\r\n              <div className=\"view-and-time\">{viewAndTimeString}</div>\r\n              <div className=\"show-max-two-lines\">{description}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nVideoPreview.propTypes = {\r\n  video: PropTypes.object,\r\n  horizontal: PropTypes.bool,\r\n  expanded: PropTypes.bool,\r\n  pathname: PropTypes.string,\r\n  search: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport './VideoGrid.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { VideoGridHeader } from './VideoGridHeader/VideoGridHeader';\r\nimport { Divider } from 'semantic-ui-react';\r\nimport { VideoPreview } from '../VideoPreview/VideoPreview';\r\n\r\nexport function VideoGrid(props) {\r\n  if (!props.videos || !props.videos.length) {\r\n    return <div />;\r\n  }\r\n  const gridItems = props.videos.map(video => {\r\n    return (\r\n      <VideoPreview\r\n        video={video}\r\n        key={video.id}\r\n        pathname=\"/watch\"\r\n        search={`?v=${video.id}`}\r\n      />\r\n    );\r\n  });\r\n\r\n  const divider = props.hideDivider ? null : <Divider />;\r\n  return (\r\n    <>\r\n      <VideoGridHeader title={props.title} />\r\n      <div className=\"video-grid\">{gridItems}</div>\r\n      {divider}\r\n    </>\r\n  );\r\n}\r\n\r\nVideoGrid.propTypes = {\r\n  videos: PropTypes.array,\r\n  hideDivider: PropTypes.bool,\r\n  title: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport { Waypoint } from 'react-waypoint';\r\nimport PropTypes from 'prop-types';\r\nimport { Loader } from 'semantic-ui-react';\r\nimport './InfiniteScroll.scss';\r\n\r\nexport function InfiniteScroll(props) {\r\n  return (\r\n    <>\r\n      {props.children}\r\n      <Waypoint onEnter={props.bottomReachedCallback}>\r\n        <div className=\"loader-container\">\r\n          <Loader active={props.showLoader} inline=\"centered\" />\r\n        </div>\r\n      </Waypoint>\r\n    </>\r\n  );\r\n}\r\n\r\nInfiniteScroll.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  bottomReachedCallback: PropTypes.func,\r\n  showLoader: PropTypes.bool\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { VideoGrid } from '../../../components/VideoGrid/VideoGrid';\r\nimport { InfiniteScroll } from '../../../components/InfiniteScroll/InfiniteScroll';\r\nimport './HomeContent.scss';\r\nimport {\r\n  getMostPopularVideos,\r\n  getVideosByCategory\r\n} from '../../../store/reducers/videos';\r\nimport { connect } from 'react-redux';\r\n\r\nconst AMOUNT_TRENDING_VIDEOS = 12;\r\n\r\nfunction HomeContent(props) {\r\n  const trendingVideos = getTrendingVideos();\r\n  const categoryGrids = getVideoGridsForCategories();\r\n\r\n  return (\r\n    <div className=\"home-content\">\r\n      <div className=\"responsive-video-grid-container\">\r\n        <InfiniteScroll\r\n          bottomReachedCallback={props.bottomReachedCallback}\r\n          showLoader={props.showLoader}\r\n        >\r\n          <VideoGrid title=\"Trending\" videos={trendingVideos} />\r\n          {categoryGrids}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  function getTrendingVideos() {\r\n    return props.mostPopularVideos.slice(0, AMOUNT_TRENDING_VIDEOS);\r\n  }\r\n\r\n  function getVideoGridsForCategories() {\r\n    const categoryTitles = Object.keys(props.videosByCategory || {});\r\n    return categoryTitles.map((categoryTitle, index) => {\r\n      const videos = props.videosByCategory[categoryTitle];\r\n      // the last video grid element should not have a divider\r\n      const hideDivider = index === categoryTitles.length - 1;\r\n      return (\r\n        <VideoGrid\r\n          title={categoryTitle}\r\n          videos={videos}\r\n          key={categoryTitle}\r\n          hideDivider={hideDivider}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    videosByCategory: getVideosByCategory(state),\r\n    mostPopularVideos: getMostPopularVideos(state)\r\n  };\r\n}\r\n\r\nHomeContent.propTypes = {\r\n  bottomReachedCallback: PropTypes.func,\r\n  showLoader: PropTypes.bool,\r\n  mostPopularVideos: PropTypes.array,\r\n  videosByCategory: PropTypes.object\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(HomeContent);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as videoActions from '../../store/actions/video';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getYoutubeLibraryLoaded } from '../../store/reducers/api';\r\nimport {\r\n  getVideoCategoryIds,\r\n  videoCategoriesLoaded,\r\n  videosByCategoryLoaded\r\n} from '../../store/reducers/videos';\r\n\r\nimport './Home.scss';\r\n\r\nimport { SideBar } from '../SideBar/SideBar';\r\nimport HomeContent from './HomeContent/HomeContent';\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categoryIndex: 0\r\n    };\r\n    this.bottomReachedCallback = this.bottomReachedCallback.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.youtubeLibraryLoaded) {\r\n      this.fetchCategoriesAndMostPopularVideos();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\r\n      this.fetchCategoriesAndMostPopularVideos();\r\n    } else if (this.props.videoCategories !== prevProps.videoCategories) {\r\n      this.fetchVideosByCategory();\r\n    }\r\n  }\r\n\r\n  fetchCategoriesAndMostPopularVideos() {\r\n    this.props.fetchMostPopularVideos();\r\n    this.props.fetchVideoCategories();\r\n  }\r\n\r\n  fetchVideosByCategory() {\r\n    const categoryStartIndex = this.state.categoryIndex;\r\n    const categories = this.props.videoCategories.slice(\r\n      categoryStartIndex,\r\n      categoryStartIndex + 3\r\n    );\r\n    this.props.fetchMostPopularVideosByCategory(categories);\r\n    this.setState(prevState => {\r\n      return {\r\n        categoryIndex: prevState.categoryIndex + 3\r\n      };\r\n    });\r\n  }\r\n\r\n  bottomReachedCallback() {\r\n    if (!this.props.videoCategoriesLoaded) {\r\n      return;\r\n    }\r\n    this.fetchVideosByCategory();\r\n  }\r\n\r\n  shouldShowLoader() {\r\n    if (this.props.videoCategoriesLoaded && this.props.videosByCategoryLoaded) {\r\n      return this.state.categoryIndex < this.props.videoCategories.length;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SideBar />\r\n        <HomeContent\r\n          bottomReachedCallback={this.bottomReachedCallback}\r\n          showLoader={this.shouldShowLoader()}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\r\n    videoCategories: getVideoCategoryIds(state),\r\n    videoCategoriesLoaded: videoCategoriesLoaded(state),\r\n    videosByCategoryLoaded: videosByCategoryLoaded(state)\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\r\n  const fetchVideoCategories = videoActions.categories.request;\r\n  const fetchMostPopularVideosByCategory =\r\n    videoActions.mostPopularByCategory.request;\r\n  return bindActionCreators(\r\n    {\r\n      fetchMostPopularVideos,\r\n      fetchVideoCategories,\r\n      fetchMostPopularVideosByCategory\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  youtubeLibraryLoaded: PropTypes.bool,\r\n  fetchMostPopularVideos: PropTypes.func,\r\n  fetchVideoCategories: PropTypes.func,\r\n  videoCategories: PropTypes.array,\r\n  fetchMostPopularVideosByCategory: PropTypes.func,\r\n  videoCategoriesLoaded: PropTypes.bool,\r\n  videosByCategoryLoaded: PropTypes.number\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React from 'react';\r\nimport './Video.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BASE_EMBED_URL = 'https://www.youtube.com/embed/';\r\n\r\nexport function Video(props) {\r\n  if (!props.id) {\r\n    return null;\r\n  }\r\n  const embedUrl = `${BASE_EMBED_URL}${props.id}`;\r\n  return (\r\n    <div className=\"video-container\">\r\n      <div className=\"video\">\r\n        <iframe\r\n          className=\"video-player\"\r\n          src={embedUrl}\r\n          frameBorder=\"0\"\r\n          allow=\"autoplay; encrypted-media\"\r\n          allowFullScreen\r\n          title=\"video\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nVideo.propTypes = {\r\n  id: PropTypes.string\r\n};\r\n","import React from 'react';\r\nimport './Rating.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon, Progress } from 'semantic-ui-react';\r\nimport { getShortNumberString } from '../../services/number/number-format';\r\n\r\nexport function Rating(props) {\r\n  let rating = null;\r\n  let likeCount = props.likeCount !== 0 ? props.likeCount : null;\r\n  let dislikeCount = null;\r\n\r\n  if (props.likeCount && props.dislikeCount) {\r\n    const amountLikes = parseFloat(props.likeCount);\r\n    const amountDislikes = parseFloat(props.dislikeCount);\r\n    const percentagePositiveRatings =\r\n      100.0 * (amountLikes / (amountLikes + amountDislikes));\r\n    // Now that we have calculated the percentage, we bring the numbers into a better readable format\r\n    likeCount = getShortNumberString(amountLikes);\r\n    dislikeCount = getShortNumberString(amountDislikes);\r\n    rating = <Progress percent={percentagePositiveRatings} size=\"tiny\" />;\r\n  }\r\n  return (\r\n    <div className=\"rating\">\r\n      <div>\r\n        <Icon name=\"thumbs outline up\" />\r\n        <span>{likeCount || ''}</span>\r\n      </div>\r\n      <div>\r\n        <Icon name=\"thumbs outline down\" />\r\n        <span>{dislikeCount}</span>\r\n      </div>\r\n      {rating}\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nRating.propTypes = {\r\n  likeCount: PropTypes.number,\r\n  dislikeCount: PropTypes.number,\r\n  children: PropTypes.array\r\n};\r\n","import React from 'react';\r\nimport './VideoMetadata.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Divider, Icon } from 'semantic-ui-react';\r\nimport { Rating } from '../Rating/Rating';\r\n\r\nexport function VideoMetadata(props) {\r\n  if (!props.video || !props.video.statistics) {\r\n    return <div />;\r\n  }\r\n  const viewCount = Number(props.video.statistics.viewCount).toLocaleString();\r\n\r\n  return (\r\n    <div className=\"video-metadata\">\r\n      <h3 className=\"video-title\">{props.video.snippet.title}</h3>\r\n      <div className=\"video-stats\">\r\n        <span>{viewCount} views</span>\r\n        <div className=\"video-actions\">\r\n          <Rating\r\n            likeCount={Number(props.video.statistics.likeCount)}\r\n            dislikeCount={Number(props.video.statistics.dislikeCount)}\r\n          />\r\n          <Button basic icon labelPosition=\"left\">\r\n            <Icon name=\"share\" />\r\n            Share\r\n          </Button>\r\n          <Button basic icon>\r\n            <Icon name=\"add circle\" />\r\n          </Button>\r\n          <Button basic icon>\r\n            <Icon name=\"ellipsis horizontal\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n\r\nVideoMetadata.propTypes = {\r\n  video: PropTypes.object\r\n};\r\n","import React, { useState } from 'react';\r\nimport './VideoInfoBox.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Image, Button, Divider } from 'semantic-ui-react';\r\nimport Linkify from 'react-linkify';\r\nimport { getPublishedAtDateString } from '../../services/date/date-format';\r\nimport { getShortNumberString } from '../../services/number/number-format';\r\n\r\nexport function VideoInfoBox(props) {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  if (!props.video || !props.channel) {\r\n    return <div />;\r\n  }\r\n\r\n  const descriptionParagraphs = getDescriptionParagraphs();\r\n  const { descriptionTextClass, buttonTitle } = getConfig();\r\n  const publishedAtString = getPublishedAtDateString(\r\n    props.video.snippet.publishedAt\r\n  );\r\n\r\n  const onToggleCollapseButtonClick = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  function getDescriptionParagraphs() {\r\n    const videoDescription = props.video.snippet\r\n      ? props.video.snippet.description\r\n      : null;\r\n    if (!videoDescription) {\r\n      return null;\r\n    }\r\n    return videoDescription.split('\\n').map((paragraph, index) => (\r\n      <p key={index}>\r\n        <Linkify>{paragraph}</Linkify>\r\n      </p>\r\n    ));\r\n  }\r\n\r\n  function getConfig() {\r\n    const descriptionTextClass = collapsed ? 'collapsed' : 'expanded';\r\n    let buttonTitle = collapsed ? 'Show More' : 'Show Less';\r\n    return {\r\n      descriptionTextClass,\r\n      buttonTitle\r\n    };\r\n  }\r\n\r\n  function getSubscriberButtonText() {\r\n    const parsedSubscriberCount = Number(\r\n      props.channel.statistics.subscriberCount\r\n    );\r\n    const subscriberCount = getShortNumberString(parsedSubscriberCount);\r\n    return `Subscribe ${subscriberCount}`;\r\n  }\r\n\r\n  const buttonText = getSubscriberButtonText();\r\n  const channelThumbnail = props.channel.snippet.thumbnails.medium.url;\r\n  const channelTitle = props.channel.snippet.title;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"video-info-box\">\r\n        <Image className=\"channel-image\" src={channelThumbnail} circular />\r\n        <div className=\"video-info\">\r\n          <div className=\"channel-name\">{channelTitle}</div>\r\n          <div className=\"video-publication-date\">{publishedAtString}</div>\r\n        </div>\r\n        <Button color=\"youtube\">{buttonText}</Button>\r\n        <div className=\"video-description\">\r\n          <div className={descriptionTextClass}>{descriptionParagraphs}</div>\r\n          <Button compact onClick={onToggleCollapseButtonClick}>\r\n            {buttonTitle}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nVideoInfoBox.propTypes = {\r\n  video: PropTypes.object,\r\n  channel: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport './CommentsHeader.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\n\r\nexport function CommentsHeader(props) {\r\n  return (\r\n    <div className=\"comments-header\">\r\n      <h4>{props.amountComments} Comments</h4>\r\n      <Button basic compact icon labelPosition=\"left\">\r\n        <Icon name=\"align left\" />\r\n        Sort by\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\nCommentsHeader.propTypes = {\r\n  amountComments: PropTypes.number\r\n};\r\n","import React from 'react';\r\nimport './AddComment.scss';\r\nimport { Form, Image, TextArea } from 'semantic-ui-react';\r\n\r\nexport function AddComment() {\r\n  return (\r\n    <div className=\"add-comment\">\r\n      <Image\r\n        className=\"user-image\"\r\n        src=\"https://via.placeholder.com/48x48\"\r\n        circular\r\n      />\r\n      <Form>\r\n        <Form.TextArea\r\n          control={TextArea}\r\n          // autoHeight //check https://www.npmjs.com/package/react-textarea-autosize if require this feature\r\n          placeholder=\"Add a public comment\"\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Comment.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Image } from 'semantic-ui-react';\r\nimport { Rating } from '../../../components/Rating/Rating';\r\n\r\nexport function Comment(props) {\r\n  if (!props.comment) {\r\n    return <div />;\r\n  }\r\n  const topLevelComment = props.comment.snippet.topLevelComment;\r\n  const {\r\n    authorProfileImageUrl,\r\n    authorDisplayName,\r\n    textOriginal\r\n  } = topLevelComment.snippet;\r\n  const likeCount = topLevelComment.snippet.likeCount;\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <Image className=\"user-image\" src={authorProfileImageUrl} circular />\r\n      <div>\r\n        <div className=\"user-name\">{authorDisplayName}</div>\r\n        <span>{textOriginal}</span>\r\n        <div className=\"comment-actions\">\r\n          <Rating likeCount={likeCount}>\r\n            {' '}\r\n            <Button size=\"mini\" compact>\r\n              REPLY\r\n            </Button>\r\n          </Rating>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nComment.propTypes = {\r\n  comment: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CommentsHeader } from './CommentsHeader/CommentsHeader';\r\nimport { AddComment } from './AddComment/AddComment';\r\nimport { Comment } from './Comment/Comment';\r\n\r\nexport function Comments(props) {\r\n  if (!props.comments) {\r\n    return <div />;\r\n  }\r\n\r\n  const comments = props.comments.map(comment => {\r\n    return <Comment comment={comment} key={comment.id} />;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <CommentsHeader amountComments={props.amountComments} />\r\n      <AddComment key=\"add-comment\" />\r\n      {comments}\r\n    </div>\r\n  );\r\n}\r\n\r\nComments.propTypes = {\r\n  comments: PropTypes.array,\r\n  amountComments: PropTypes.number\r\n};\r\n","import React from 'react';\r\nimport './NextUpVideo.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Checkbox, Divider } from 'semantic-ui-react';\r\nimport { VideoPreview } from '../../VideoPreview/VideoPreview';\r\n\r\nexport function NextUpVideo(props) {\r\n  return (\r\n    <>\r\n      <div className=\"next-up-container\">\r\n        <h4>Up next</h4>\r\n        <div className=\"up-next-toggle\">\r\n          <span>Autoplay</span>\r\n          <Checkbox toggle defaultChecked />\r\n        </div>\r\n      </div>\r\n      <VideoPreview\r\n        horizontal={true}\r\n        video={props.video}\r\n        pathname=\"/watch\"\r\n        search={`?v=${props.video.id}`}\r\n      />\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nNextUpVideo.propTypes = {\r\n  video: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport './RelatedVideos.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { VideoPreview } from '../VideoPreview/VideoPreview';\r\nimport { NextUpVideo } from './NextUpVideo/NextUpVideo';\r\n\r\nexport function RelatedVideos(props) {\r\n  if (!props.videos || !props.videos.length) {\r\n    return <div className=\"related-videos\" />;\r\n  }\r\n\r\n  // safe because before we check if the array has at least one element\r\n  const nextUpVideo = props.videos[0];\r\n  const remainingVideos = props.videos.slice(1);\r\n\r\n  const relatedVideosPreviews = remainingVideos.map(relatedVideo => (\r\n    <VideoPreview\r\n      video={relatedVideo}\r\n      key={relatedVideo.id}\r\n      pathname=\"/watch\"\r\n      search={`?v=${relatedVideo.id}`}\r\n      horizontal={true}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"related-videos\">\r\n      <NextUpVideo video={nextUpVideo} />\r\n      {relatedVideosPreviews}\r\n    </div>\r\n  );\r\n}\r\n\r\nRelatedVideos.propTypes = {\r\n  videos: PropTypes.array\r\n};\r\n","import { VIDEO_DETAILS, WATCH_DETAILS } from '../actions/watch';\r\nimport { SUCCESS } from '../actions';\r\nimport { CHANNEL_LIST_RESPONSE } from '../api/youtube-api-response-types';\r\n\r\nconst initialState = {\r\n  byId: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case WATCH_DETAILS[SUCCESS]:\r\n      return reduceWatchDetails(action.response, state);\r\n    case VIDEO_DETAILS[SUCCESS]:\r\n      return reduceVideoDetails(action.response, state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceWatchDetails(responses, prevState) {\r\n  const channelResponse = responses.find(\r\n    response => response.result.kind === CHANNEL_LIST_RESPONSE\r\n  );\r\n  let channels = {};\r\n  if (channelResponse && channelResponse.result.items) {\r\n    // we know that there will only be one item\r\n    // because we ask for a channel with a specific id\r\n    const channel = channelResponse.result.items[0];\r\n    channels[channel.id] = channel;\r\n  }\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      ...channels\r\n    }\r\n  };\r\n}\r\n\r\nfunction reduceVideoDetails(responses, prevState) {\r\n  const channelResponse = responses.find(\r\n    response => response.result.kind === CHANNEL_LIST_RESPONSE\r\n  );\r\n  let channelEntry = {};\r\n  if (channelResponse && channelResponse.result.items) {\r\n    // we're explicitly asking for a channel with a particular id\r\n    // so the response set must either contain 0 items (if a channel with the specified id does not exist)\r\n    // or at most one item (i.e. the channel we've been asking for)\r\n    const channel = channelResponse.result.items[0];\r\n    channelEntry = {\r\n      [channel.id]: channel\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      ...channelEntry\r\n    }\r\n  };\r\n}\r\n\r\nexport const getChannel = (state, channelId) => {\r\n  if (!channelId) return null;\r\n  return state.channels.byId[channelId];\r\n};\r\n","import {\r\n  createAction,\r\n  createRequestTypes,\r\n  FAILURE,\r\n  REQUEST,\r\n  SUCCESS\r\n} from './index';\r\n\r\nexport const COMMENT_THREAD = createRequestTypes('COMMENT_THREAD');\r\nexport const thread = {\r\n  request: (videoId, nextPageToken) =>\r\n    createAction(COMMENT_THREAD[REQUEST], { videoId, nextPageToken }),\r\n  success: (response, videoId) =>\r\n    createAction(COMMENT_THREAD[SUCCESS], { response, videoId }),\r\n  failure: response => createAction(COMMENT_THREAD[FAILURE], { response })\r\n};\r\n","import { createSelector } from 'reselect';\r\nimport { SUCCESS } from '../actions';\r\nimport { WATCH_DETAILS } from '../actions/watch';\r\nimport { COMMENT_THREAD } from '../actions/comment';\r\nimport { COMMENT_THREAD_LIST_RESPONSE } from '../api/youtube-api-response-types';\r\nimport { getSearchParam } from '../../services/url/index.js';\r\n\r\nconst initialState = {\r\n  byVideo: {},\r\n  byId: {}\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case WATCH_DETAILS[SUCCESS]:\r\n      return reduceWatchDetails(action.response, action.videoId, state);\r\n    case COMMENT_THREAD[SUCCESS]:\r\n      return reduceCommentThread(action.response, action.videoId, state);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction reduceWatchDetails(responses, videoId, prevState) {\r\n  const commentThreadResponse = responses.find(\r\n    res => res.result.kind === COMMENT_THREAD_LIST_RESPONSE\r\n  );\r\n  return reduceCommentThread(commentThreadResponse.result, videoId, prevState);\r\n}\r\n\r\nfunction reduceCommentThread(response, videoId, prevState) {\r\n  if (!response) {\r\n    return prevState;\r\n  }\r\n  const newComments = response.items.reduce((acc, item) => {\r\n    acc[item.id] = item;\r\n    return acc;\r\n  }, {});\r\n\r\n  // if we have already fetched some comments for a particular video\r\n  // we just append the ids for the new comments\r\n  const prevCommentIds = prevState.byVideo[videoId]\r\n    ? prevState.byVideo[videoId].ids\r\n    : [];\r\n  const commentIds = [...prevCommentIds, ...Object.keys(newComments)];\r\n\r\n  const byVideoComment = {\r\n    nextPageToken: response.nextPageToken,\r\n    ids: commentIds\r\n  };\r\n\r\n  return {\r\n    ...prevState,\r\n    byId: {\r\n      ...prevState.byId,\r\n      ...newComments\r\n    },\r\n    byVideo: {\r\n      ...prevState.byVideo,\r\n      [videoId]: byVideoComment\r\n    }\r\n  };\r\n}\r\n\r\nconst getCommentIdsForVideo = (state, videoId) => {\r\n  const comment = state.comments.byVideo[videoId];\r\n  if (comment) {\r\n    return comment.ids;\r\n  }\r\n  return [];\r\n};\r\nexport const getCommentsForVideo = createSelector(\r\n  getCommentIdsForVideo,\r\n  state => state.comments.byId,\r\n  (commentIds, allComments) => {\r\n    return commentIds.map(commentId => allComments[commentId]);\r\n  }\r\n);\r\n\r\nconst getComment = (state, location) => {\r\n  const videoId = getSearchParam(location, 'v');\r\n  return state.comments.byVideo[videoId];\r\n};\r\nexport const getCommentNextPageToken = createSelector(\r\n  getComment,\r\n  comment => {\r\n    return comment ? comment.nextPageToken : null;\r\n  }\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Video } from '../../../components/Video/Video';\r\nimport { VideoMetadata } from '../../../components/VideoMetadata/VideoMetadata';\r\nimport { VideoInfoBox } from '../../../components/VideoInfoBox/VideoInfoBox';\r\nimport { Comments } from '../../Comments/Comments';\r\nimport { RelatedVideos } from '../../../components/RelatedVideos/RelatedVideos';\r\nimport './WatchContent.scss';\r\n\r\nimport {\r\n  getRelatedVideos,\r\n  getVideoById,\r\n  getAmountComments\r\n} from '../../../store/reducers/videos';\r\nimport { getChannel } from '../../../store/reducers/channels';\r\nimport { getCommentsForVideo } from '../../../store/reducers/comments';\r\nimport { InfiniteScroll } from '../../../components/InfiniteScroll/InfiniteScroll';\r\n\r\nfunction WatchContent(props) {\r\n  if (!props.videoId) {\r\n    return <div />;\r\n  }\r\n\r\n  function shouldShowLoader() {\r\n    return !!props.nextPageToken;\r\n  }\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      bottomReachedCallback={props.bottomReachedCallback}\r\n      showLoader={shouldShowLoader()}\r\n    >\r\n      <div className=\"watch-grid\">\r\n        <Video className=\"video\" id={props.videoId} />\r\n        <VideoMetadata video={props.video} />\r\n        <VideoInfoBox\r\n          className=\"video-info-box\"\r\n          video={props.video}\r\n          channel={props.channel}\r\n        />\r\n        <Comments\r\n          comments={props.comments}\r\n          amountComments={props.amountComments}\r\n        />\r\n        <RelatedVideos className=\"relatedVideos\" videos={props.relatedVideos} />\r\n      </div>\r\n    </InfiniteScroll>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    video: getVideoById(state, props.videoId),\r\n    relatedVideos: getRelatedVideos(state, props.videoId),\r\n    channel: getChannel(state, props.channelId),\r\n    comments: getCommentsForVideo(state, props.videoId),\r\n    amountComments: getAmountComments(state, props.videoId)\r\n  };\r\n}\r\n\r\nWatchContent.propTypes = {\r\n  nextPageToken: PropTypes.string,\r\n  videoId: PropTypes.string,\r\n  bottomReachedCallback: PropTypes.func,\r\n  video: PropTypes.object,\r\n  channel: PropTypes.object,\r\n  comments: PropTypes.array,\r\n  amountComments: PropTypes.number,\r\n  relatedVideos: PropTypes.array\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(WatchContent);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WatchContent from './WatchContent/WatchContent';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as watchActions from '../../store/actions/watch';\r\nimport * as commentActions from '../../store/actions/comment';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getYoutubeLibraryLoaded } from '../../store/reducers/api';\r\nimport { getChannelId } from '../../store/reducers/videos';\r\nimport { getCommentNextPageToken } from '../../store/reducers/comments';\r\nimport { getSearchParam } from '../../services/url/index';\r\n\r\nclass Watch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fetchMoreComments = this.fetchMoreComments.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.youtubeLibraryLoaded) {\r\n      this.fetchWatchContent();\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.youtubeLibraryLoaded !== prevProps.youtubeLibraryLoaded) {\r\n      this.fetchWatchContent();\r\n    }\r\n  }\r\n  getVideoId() {\r\n    return getSearchParam(this.props.location, 'v');\r\n  }\r\n\r\n  fetchWatchContent() {\r\n    const videoId = this.getVideoId();\r\n    if (!videoId) {\r\n      this.props.history.push('/');\r\n    }\r\n\r\n    this.props.fetchWatchDetails(videoId, this.props.channelId);\r\n  }\r\n\r\n  fetchMoreComments() {\r\n    if (this.props.nextPageToken) {\r\n      this.props.fetchCommentThread(\r\n        this.getVideoId(),\r\n        this.props.nextPageToken\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const videoId = this.getVideoId();\r\n    return (\r\n      <WatchContent\r\n        videoId={videoId}\r\n        channelId={this.props.channelId}\r\n        bottomReachedCallback={this.fetchMoreComments}\r\n        nextPageToken={this.props.nextPageToken}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\r\n    channelId: getChannelId(state, props.location, 'v'),\r\n    nextPageToken: getCommentNextPageToken(state, props.location)\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const fetchWatchDetails = watchActions.details.request;\r\n  const fetchCommentThread = commentActions.thread.request;\r\n  return bindActionCreators(\r\n    { fetchWatchDetails, fetchCommentThread },\r\n    dispatch\r\n  );\r\n}\r\n\r\nWatch.propTypes = {\r\n  youtubeLibraryLoaded: PropTypes.bool,\r\n  location: PropTypes.object,\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n  fetchWatchDetails: PropTypes.func,\r\n  channelId: PropTypes.string,\r\n  nextPageToken: PropTypes.string,\r\n  fetchCommentThread: PropTypes.func\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Watch)\r\n);\r\n","import React, { useState } from 'react';\r\nimport './Header.scss';\r\nimport PropTypes from 'prop-types';\r\nimport logo from '../../assets/img/logo.jpg';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Image, Menu, Form, Input, Icon } from 'semantic-ui-react';\r\n\r\nconst Header = props => {\r\n  const [queryString, setQueryString] = useState('');\r\n\r\n  const onInputChange = event => {\r\n    setQueryString(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const escapedSearchQuery = encodeURI(queryString);\r\n    props.history.push(`/results?search_query=${escapedSearchQuery}`);\r\n  };\r\n\r\n  return (\r\n    <Menu borderless className=\"top-menu\" fixed=\"top\">\r\n      <Menu.Item header className=\"logo\">\r\n        <Link to=\"/\">\r\n          <Image src={logo} size=\"tiny\" />\r\n        </Link>\r\n      </Menu.Item>\r\n      <Menu.Menu className=\"nav-container\">\r\n        <Menu.Item className=\"search-input\">\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Field>\r\n              <Input\r\n                placeholder=\"Search\"\r\n                size=\"small\"\r\n                action=\"Go\"\r\n                value={queryString}\r\n                onChange={onInputChange}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item>\r\n          <Icon className=\"header-icon\" name=\"video camera\" size=\"large\" />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Icon className=\"header-icon\" name=\"grid layout\" size=\"large\" />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Icon className=\"header-icon\" name=\"chat\" size=\"large\" />\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <Icon className=\"header-icon\" name=\"alarm\" size=\"large\" />\r\n        </Menu.Item>\r\n        <Menu.Item name=\"avatar\">\r\n          <Image src=\"https://via.placeholder.com/80x80\" avatar />\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Layout.scss';\r\nimport Header from '../../containers/Header/Header';\r\nimport ScrollToTop from '../ScrollToTop/ScrollToTop';\r\n\r\nexport function Layout(props) {\r\n  return (\r\n    <ScrollToTop>\r\n      <div className=\"app-layout\">\r\n        <Header />\r\n        {props.children}\r\n      </div>\r\n    </ScrollToTop>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.object\r\n};\r\n","import React from 'react';\r\nimport './VideoList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { SideBar } from '../../containers/SideBar/SideBar';\r\nimport { VideoPreview } from '../VideoPreview/VideoPreview';\r\nimport { InfiniteScroll } from '../InfiniteScroll/InfiniteScroll';\r\n\r\nexport function VideoList(props) {\r\n  function getVideoPreviews() {\r\n    if (!props.videos || !props.videos.length) {\r\n      return null;\r\n    }\r\n\r\n    const firstVideo = props.videos[0];\r\n    // it's actually to check all of the videos have description property, but checking the first one should be enough\r\n    if (!firstVideo.snippet.description) {\r\n      return null;\r\n    }\r\n\r\n    return props.videos.map(video => (\r\n      <VideoPreview\r\n        horizontal={true}\r\n        expanded={true}\r\n        video={video}\r\n        key={video.id}\r\n        pathname={'/watch'}\r\n        search={'?v=' + video.id}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SideBar />\r\n      <div className=\"video-list\">\r\n        <InfiniteScroll\r\n          bottomReachedCallback={props.bottomReachedCallback}\r\n          showLoader={props.showLoader}\r\n        >\r\n          {getVideoPreviews()}\r\n        </InfiniteScroll>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nVideoList.propTypes = {\r\n  videos: PropTypes.array,\r\n  bottomReachedCallback: PropTypes.func,\r\n  showLoader: PropTypes.bool\r\n};\r\n","import React from 'react';\r\nimport './Trending.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { VideoList } from '../../components/VideoList/VideoList';\r\nimport * as videoActions from '../../store/actions/video';\r\nimport {\r\n  getMostPopularVideos,\r\n  getMostPopularVideosNextPageToken,\r\n  allMostPopularVideosLoaded\r\n} from '../../store/reducers/videos';\r\nimport { getYoutubeLibraryLoaded } from '../../store/reducers/api';\r\n\r\nclass Trending extends React.Component {\r\n  componentDidMount() {\r\n    this.fetchTrendingVideos();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.youtubeLibraryLoaded !== this.props.youtubeLibraryLoaded) {\r\n      this.fetchTrendingVideos();\r\n    }\r\n  }\r\n\r\n  fetchTrendingVideos() {\r\n    if (this.props.youtubeLibraryLoaded) {\r\n      this.props.fetchMostPopularVideos(20, true);\r\n    }\r\n  }\r\n\r\n  shouldShowLoader() {\r\n    return !this.props.allMostPopularVideosLoaded;\r\n  }\r\n\r\n  fetchMoreVideos() {\r\n    const { nextPageToken } = this.props;\r\n    if (this.props.youtubeLibraryLoaded && nextPageToken) {\r\n      this.props.fetchMostPopularVideos(12, true, nextPageToken);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const loaderActive = this.shouldShowLoader();\r\n\r\n    return (\r\n      <VideoList\r\n        bottomReachedCallback={this.fetchMoreVideos}\r\n        showLoader={loaderActive}\r\n        videos={this.props.videos}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    videos: getMostPopularVideos(state),\r\n    youtubeLibraryLoaded: getYoutubeLibraryLoaded(state),\r\n    allMostPopularVideosLoaded: allMostPopularVideosLoaded(state),\r\n    nextPageToken: getMostPopularVideosNextPageToken(state)\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const fetchMostPopularVideos = videoActions.mostPopular.request;\r\n  return bindActionCreators({ fetchMostPopularVideos }, dispatch);\r\n}\r\n\r\nTrending.propTypes = {\r\n  youtubeLibraryLoaded: PropTypes.bool,\r\n  fetchMostPopularVideos: PropTypes.func,\r\n  allMostPopularVideosLoaded: PropTypes.bool,\r\n  nextPageToken: PropTypes.string,\r\n  videos: PropTypes.array\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Trending);\r\n","import {\r\n  createAction,\r\n  createRequestTypes,\r\n  REQUEST,\r\n  SUCCESS,\r\n  FAILURE\r\n} from './index';\r\n\r\nexport const SEARCH_FOR_VIDEOS = createRequestTypes('SEARCH_FOR_VIDEOS');\r\nexport const forVideos = {\r\n  request: (searchQuery, nextPageToken, amount) =>\r\n    createAction(SEARCH_FOR_VIDEOS[REQUEST], {\r\n      searchQuery,\r\n      nextPageToken,\r\n      amount\r\n    }),\r\n  success: (response, searchQuery) =>\r\n    createAction(SEARCH_FOR_VIDEOS[SUCCESS], { response, searchQuery }),\r\n  failure: (response, searchQuery) =>\r\n    createAction(SEARCH_FOR_VIDEOS[FAILURE], { response, searchQuery })\r\n};\r\n","import { SEARCH_FOR_VIDEOS } from '../actions/search';\r\nimport { REQUEST, SUCCESS } from '../actions';\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case SEARCH_FOR_VIDEOS[SUCCESS]:\r\n      return reduceSearchForVideos(action.response, action.searchQuery, state);\r\n    case SEARCH_FOR_VIDEOS[REQUEST]:\r\n      // delete the previous search element if we don't load more search results for the previous search query\r\n      return action.nextPageToken ? state : {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getSearchResults = state => state.search.results;\r\nexport const getSearchNextPageToken = state => state.search.nextPageToken;\r\n\r\nfunction reduceSearchForVideos(response, searchQuery, prevState) {\r\n  let searchResults = response.items.map(item => ({\r\n    ...item,\r\n    id: item.id.videoId\r\n  }));\r\n\r\n  if (prevState.query === searchQuery) {\r\n    const prevResults = prevState.results || [];\r\n    searchResults = prevResults.concat(searchResults);\r\n  }\r\n\r\n  return {\r\n    totalResults: response.pageInfo.totalResults,\r\n    nextPageToken: response.nextPageToken,\r\n    query: searchQuery,\r\n    results: searchResults\r\n  };\r\n}\r\n","import React from 'react';\r\nimport './Search.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getYoutubeLibraryLoaded } from '../../store/reducers/api';\r\nimport {\r\n  getSearchNextPageToken,\r\n  getSearchResults\r\n} from '../../store/reducers/search';\r\nimport * as searchActions from '../../store/actions/search';\r\nimport { getSearchParam } from '../../services/url';\r\nimport { VideoList } from '../../components/VideoList/VideoList';\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.bottomReachedCallback = this.bottomReachedCallback.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (!this.getSearchQuery()) {\r\n      // redirect to home component if search query is not there\r\n      this.props.history.push('/');\r\n    }\r\n    this.searchForVideos();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.youtubeApiLoaded !== this.props.youtubeApiLoaded) {\r\n      this.searchForVideos();\r\n    }\r\n  }\r\n  searchForVideos() {\r\n    const searchQuery = this.getSearchQuery();\r\n    if (this.props.youtubeApiLoaded) {\r\n      this.props.searchForVideos(searchQuery);\r\n    }\r\n  }\r\n\r\n  getSearchQuery() {\r\n    return getSearchParam(this.props.location, 'search_query');\r\n  }\r\n\r\n  bottomReachedCallback() {\r\n    if (this.props.nextPageToken) {\r\n      this.props.searchForVideos(\r\n        this.getSearchQuery(),\r\n        this.props.nextPageToken,\r\n        25\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <VideoList\r\n        bottomReachedCallback={this.bottomReachedCallback}\r\n        showLoader={true}\r\n        videos={this.props.searchResults}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  return {\r\n    youtubeApiLoaded: getYoutubeLibraryLoaded(state),\r\n    searchResults: getSearchResults(state, props.location.search),\r\n    nextPageToken: getSearchNextPageToken(state, props.location.search)\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  const searchForVideos = searchActions.forVideos.request;\r\n  return bindActionCreators({ searchForVideos }, dispatch);\r\n}\r\n\r\nSearch.propTypes = {\r\n  youtubeApiLoaded: PropTypes.bool,\r\n  searchForVideos: PropTypes.func,\r\n  history: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n  location: PropTypes.object,\r\n  nextPageToken: PropTypes.string,\r\n  searchResults: PropTypes.array\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Search)\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Home from './containers/Home/Home';\r\nimport Watch from './containers/Watch/Watch';\r\nimport { Layout } from './components/Layout/Layout';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { youtubeLibraryLoaded } from './store/actions/api';\r\n\r\nimport './assets/style/normalize.css';\r\nimport './assets/style/custom.scss';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Trending from './containers/Trending/Trending';\r\nimport Search from './containers/Search/Search';\r\n\r\nconst App = props => {\r\n  const { youtubeLibraryLoaded } = props;\r\n\r\n  useEffect(() => {\r\n    loadYoutubeApi();\r\n\r\n    function loadYoutubeApi() {\r\n      const script = document.createElement('script');\r\n      script.src = 'https://apis.google.com/js/client.js';\r\n      const API_KEY = process.env.REACT_APP_YOUTUBE_KEY;\r\n\r\n      script.onload = () => {\r\n        window.gapi.load('client', () => {\r\n          window.gapi.client.setApiKey(API_KEY);\r\n          window.gapi.client.load('youtube', 'v3', () => {\r\n            youtubeLibraryLoaded();\r\n          });\r\n        });\r\n      };\r\n\r\n      document.body.appendChild(script);\r\n    }\r\n  }, [youtubeLibraryLoaded]);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route\r\n            path=\"/watch\"\r\n            render={() => <Watch key={props.location.key} />}\r\n          />\r\n          <Route path=\"/feed/trending\" component={Trending} />\r\n          <Route\r\n            path=\"/results\"\r\n            render={() => <Search key={props.location.key} />}\r\n          />\r\n        </Switch>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  youtubeLibraryLoaded: PropTypes.func,\r\n  location: PropTypes.object\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ youtubeLibraryLoaded }, dispatch);\r\n}\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(App)\r\n);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import apiReducer from './api';\r\nimport { combineReducers } from 'redux';\r\nimport videosReducer from './videos';\r\nimport channelsReducer from './channels';\r\nimport commentsReducer from './comments';\r\nimport searchReducer from './search';\r\n\r\nexport default combineReducers({\r\n  api: apiReducer,\r\n  videos: videosReducer,\r\n  channels: channelsReducer,\r\n  comments: commentsReducer,\r\n  search: searchReducer\r\n});\r\n","/*\r\n  Util - Youtube API boilerplate code\r\n */\r\n\r\nexport function buildApiRequest(requestMethod, path, params, properties) {\r\n  params = removeEmptyParams(params);\r\n  let request;\r\n  if (properties) {\r\n    let resource = createResource(properties);\r\n    request = window.gapi.client.request({\r\n      body: resource,\r\n      method: requestMethod,\r\n      path: path,\r\n      params: params\r\n    });\r\n  } else {\r\n    request = window.gapi.client.request({\r\n      method: requestMethod,\r\n      path: path,\r\n      params: params\r\n    });\r\n  }\r\n  return request;\r\n}\r\n\r\nfunction removeEmptyParams(params) {\r\n  for (var p in params) {\r\n    if (!params[p] || params[p] === 'undefined') {\r\n      delete params[p];\r\n    }\r\n  }\r\n  return params;\r\n}\r\n\r\nfunction createResource(properties) {\r\n  var resource = {};\r\n  var normalizedProps = properties;\r\n  for (var p in properties) {\r\n    var value = properties[p];\r\n    if (p && p.substr(-2, 2) === '[]') {\r\n      var adjustedName = p.replace('[]', '');\r\n      if (value) {\r\n        normalizedProps[adjustedName] = value.split(',');\r\n      }\r\n      delete normalizedProps[p];\r\n    }\r\n  }\r\n  for (var prop in normalizedProps) {\r\n    // Leave properties that don't have values out of inserted resource.\r\n    if (normalizedProps.hasOwnProperty(prop) && normalizedProps[prop]) {\r\n      var propArray = prop.split('.');\r\n      var ref = resource;\r\n      for (var pa = 0; pa < propArray.length; pa++) {\r\n        var key = propArray[pa];\r\n        if (pa === propArray.length - 1) {\r\n          ref[key] = normalizedProps[prop];\r\n        } else {\r\n          ref = ref[key] = ref[key] || {};\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return resource;\r\n}\r\n\r\nexport function buildMostPopularVideosRequest(\r\n  amount = 12,\r\n  loadDescription = false,\r\n  nextPageToken,\r\n  videoCategoryId = null\r\n) {\r\n  let fields =\r\n    'nextPageToken,prevPageToken,items(contentDetails/duration,id,snippet(channelId,channelTitle,publishedAt,thumbnails/medium,title),statistics/viewCount),pageInfo(totalResults)';\r\n  if (loadDescription) {\r\n    fields += ',items/snippet/description';\r\n  }\r\n  return buildApiRequest(\r\n    'GET',\r\n    '/youtube/v3/videos',\r\n    {\r\n      part: 'snippet,statistics,contentDetails',\r\n      chart: 'mostPopular',\r\n      maxResults: amount,\r\n      regionCode: 'US',\r\n      pageToken: nextPageToken,\r\n      fields,\r\n      videoCategoryId\r\n    },\r\n    null\r\n  );\r\n}\r\n\r\nexport function buildVideoCategoriesRequest() {\r\n  return buildApiRequest(\r\n    'GET',\r\n    '/youtube/v3/videoCategories',\r\n    {\r\n      part: 'snippet',\r\n      regionCode: 'US'\r\n    },\r\n    null\r\n  );\r\n}\r\n\r\nexport function buildVideoDetailRequest(videoId) {\r\n  return buildApiRequest(\r\n    'GET',\r\n    '/youtube/v3/videos',\r\n    {\r\n      part: 'snippet,statistics,contentDetails',\r\n      id: videoId,\r\n      fields:\r\n        'kind,items(contentDetails/duration,id,snippet(channelId,channelTitle,description,publishedAt,thumbnails/medium,title),statistics)'\r\n    },\r\n    null\r\n  );\r\n}\r\n\r\nexport function buildRelatedVideosRequest(videoId, amountRelatedVideos = 8) {\r\n  return buildApiRequest(\r\n    'GET',\r\n    '/youtube/v3/search',\r\n    {\r\n      part: 'snippet',\r\n      type: 'video',\r\n      maxResults: amountRelatedVideos,\r\n      relatedToVideoId: videoId\r\n    },\r\n    null\r\n  );\r\n}\r\n\r\nexport function buildChannelRequest(channelId) {\r\n  return buildApiRequest(\r\n    'GET',\r\n    '/youtube/v3/channels',\r\n    {\r\n      part: 'snippet,statistics',\r\n      id: channelId,\r\n      fields:\r\n        'kind,items(id,snippet(description,thumbnails/medium,title),statistics/subscriberCount)'\r\n    },\r\n    null\r\n  );\r\n}\r\n\r\nexport function buildCommentThreadRequest(videoId, nextPageToken) {\r\n  return buildApiRequest(\r\n    'GET',\r\n    '/youtube/v3/commentThreads',\r\n    {\r\n      part: 'id,snippet',\r\n      pageToken: nextPageToken,\r\n      videoId\r\n    },\r\n    null\r\n  );\r\n}\r\n\r\nexport function buildSearchRequest(query, nextPageToken, amount = 12) {\r\n  return buildApiRequest(\r\n    'GET',\r\n    '/youtube/v3/search',\r\n    {\r\n      part: 'id,snippet',\r\n      q: query,\r\n      type: 'video',\r\n      pageToken: nextPageToken,\r\n      maxResults: amount\r\n    },\r\n    null\r\n  );\r\n}\r\n","import { fork, take, takeEvery, call, all, put } from 'redux-saga/effects';\r\nimport * as api from '../api/youtube-api';\r\nimport * as videoActions from '../actions/video';\r\nimport { REQUEST } from '../actions';\r\nimport { fetchEntity, ignoreErrors } from './index';\r\n\r\nexport function* watchMostPopularVideos() {\r\n  while (true) {\r\n    const { amount, loadDescription, nextPageToken } = yield take(\r\n      videoActions.MOST_POPULAR[REQUEST]\r\n    );\r\n    yield fork(fetchMostPopularVideos, amount, loadDescription, nextPageToken);\r\n  }\r\n}\r\n\r\nexport function* fetchMostPopularVideos(\r\n  amount,\r\n  loadDescription,\r\n  nextPageToken\r\n) {\r\n  const request = api.buildMostPopularVideosRequest.bind(\r\n    null,\r\n    amount,\r\n    loadDescription,\r\n    nextPageToken\r\n  );\r\n  yield fetchEntity(request, videoActions.mostPopular);\r\n}\r\n\r\nexport const fetchVideoCategories = fetchEntity.bind(\r\n  null,\r\n  api.buildVideoCategoriesRequest,\r\n  videoActions.categories\r\n);\r\n\r\nexport function* watchVideoCategories() {\r\n  yield takeEvery(videoActions.VIDEO_CATEGORIES[REQUEST], fetchVideoCategories);\r\n}\r\n\r\nexport function* watchMostPopularVideosByCategory() {\r\n  while (true) {\r\n    const { categories } = yield take(\r\n      videoActions.MOST_POPULAR_BY_CATEGORY[REQUEST]\r\n    );\r\n    yield fork(fetchMostPopularVideosByCategory, categories);\r\n  }\r\n}\r\n\r\nexport function* fetchMostPopularVideosByCategory(categories) {\r\n  const requests = categories.map(category => {\r\n    const wrapper = ignoreErrors(\r\n      api.buildMostPopularVideosRequest,\r\n      12,\r\n      false,\r\n      null,\r\n      category\r\n    );\r\n    return call(wrapper);\r\n  });\r\n  try {\r\n    const response = yield all(requests);\r\n    yield put(videoActions.mostPopularByCategory.success(response, categories));\r\n  } catch (error) {\r\n    // will not catch if all requests are failed\r\n    yield put(videoActions.mostPopularByCategory.failure(error));\r\n  }\r\n}\r\n","import { fork, take, all, put, call } from 'redux-saga/effects';\r\nimport * as watchActions from '../actions/watch';\r\nimport { REQUEST } from '../actions';\r\nimport {\r\n  buildVideoDetailRequest,\r\n  buildRelatedVideosRequest,\r\n  buildChannelRequest,\r\n  buildCommentThreadRequest\r\n} from '../api/youtube-api';\r\nimport {\r\n  SEARCH_LIST_RESPONSE,\r\n  VIDEO_LIST_RESPONSE\r\n} from '../api/youtube-api-response-types';\r\n\r\nexport function* watchWatchDetails() {\r\n  while (true) {\r\n    const { videoId, channelId } = yield take(\r\n      watchActions.WATCH_DETAILS[REQUEST]\r\n    );\r\n\r\n    yield fork(fetchWatchDetails, videoId, channelId);\r\n  }\r\n}\r\n\r\nexport function* fetchWatchDetails(videoId, channelId) {\r\n  let requests = [\r\n    buildVideoDetailRequest.bind(null, videoId),\r\n    buildRelatedVideosRequest.bind(null, videoId),\r\n    buildCommentThreadRequest.bind(null, videoId)\r\n  ];\r\n\r\n  if (channelId) {\r\n    requests.push(buildChannelRequest.bind(null, channelId));\r\n  }\r\n\r\n  try {\r\n    const responses = yield all(requests.map(fn => call(fn)));\r\n    yield put(watchActions.details.success(responses, videoId));\r\n    yield call(fetchVideoDetails, responses, channelId === null);\r\n  } catch (error) {\r\n    yield put(watchActions.details.failure(error));\r\n  }\r\n}\r\n\r\nfunction* fetchVideoDetails(responses, shouldFetchChannelInfo) {\r\n  const searchListResponse = responses.find(\r\n    response => response.result.kind === SEARCH_LIST_RESPONSE\r\n  );\r\n  const relatedVideoIds = searchListResponse.result.items.map(\r\n    relatedVideo => relatedVideo.id.videoId\r\n  );\r\n\r\n  const requests = relatedVideoIds.map(relatedVideoId => {\r\n    return buildVideoDetailRequest.bind(null, relatedVideoId);\r\n  });\r\n\r\n  if (shouldFetchChannelInfo) {\r\n    // we have to extract the video's channel id from the video details response\r\n    // so we can load additional channel information.\r\n    // this is only needed, when a user directly accesses .../watch?v=1234\r\n    // because then we only know the video id\r\n    const videoDetailResponse = responses.find(\r\n      response => response.result.kind === VIDEO_LIST_RESPONSE\r\n    );\r\n    const videos = videoDetailResponse.result.items;\r\n    if (videos && videos.length) {\r\n      requests.push(\r\n        buildChannelRequest.bind(null, videos[0].snippet.channelId)\r\n      );\r\n    }\r\n  }\r\n\r\n  try {\r\n    const responses = yield all(requests.map(fn => call(fn)));\r\n    yield put(watchActions.videoDetails.success(responses));\r\n  } catch (error) {\r\n    yield put(watchActions.videoDetails.failure(error));\r\n  }\r\n}\r\n","import { fork, take } from 'redux-saga/effects';\r\nimport { REQUEST } from '../actions';\r\nimport * as commentActions from '../actions/comment';\r\nimport * as api from '../api/youtube-api';\r\nimport { fetchEntity } from './index';\r\n\r\nexport function* watchCommentThread() {\r\n  while (true) {\r\n    const { videoId, nextPageToken } = yield take(\r\n      commentActions.COMMENT_THREAD[REQUEST]\r\n    );\r\n    yield fork(fetchCommentThread, videoId, nextPageToken);\r\n  }\r\n}\r\n\r\nexport function* fetchCommentThread(videoId, nextPageToken) {\r\n  const request = api.buildCommentThreadRequest.bind(\r\n    null,\r\n    videoId,\r\n    nextPageToken\r\n  );\r\n  yield fetchEntity(request, commentActions.thread, videoId);\r\n}\r\n","import { fork, take } from 'redux-saga/effects';\r\nimport * as searchActions from '../actions/search';\r\nimport * as api from '../api/youtube-api';\r\nimport { REQUEST } from '../actions';\r\nimport { fetchEntity } from './index';\r\n\r\nexport function* watchSearchForVideos() {\r\n  while (true) {\r\n    const { searchQuery, amount, nextPageToken } = yield take(\r\n      searchActions.SEARCH_FOR_VIDEOS[REQUEST]\r\n    );\r\n    yield fork(searchForVideos, searchQuery, nextPageToken, amount);\r\n  }\r\n}\r\n\r\nexport function* searchForVideos(searchQuery, nextPageToken, amount) {\r\n  const request = api.buildSearchRequest.bind(\r\n    null,\r\n    searchQuery,\r\n    nextPageToken,\r\n    amount\r\n  );\r\n  yield fetchEntity(request, searchActions.forVideos, searchQuery);\r\n}\r\n","import { all, call, put, fork } from 'redux-saga/effects';\r\nimport {\r\n  watchMostPopularVideos,\r\n  watchMostPopularVideosByCategory,\r\n  watchVideoCategories\r\n} from './video';\r\nimport { watchWatchDetails } from './watch';\r\nimport { watchCommentThread } from './comment';\r\nimport { watchSearchForVideos } from './search';\r\n\r\nexport default function*() {\r\n  yield all([\r\n    fork(watchMostPopularVideos),\r\n    fork(watchVideoCategories),\r\n    fork(watchMostPopularVideosByCategory),\r\n    fork(watchWatchDetails),\r\n    fork(watchCommentThread),\r\n    fork(watchSearchForVideos)\r\n  ]);\r\n}\r\n\r\nexport function* fetchEntity(request, entity, ...args) {\r\n  try {\r\n    const response = yield call(request);\r\n    // we directly return the result object and throw away the headers and the status text here\r\n    // if status and headers are needed, then instead of returning response.result, we have to return just response.\r\n    yield put(entity.success(response.result, ...args));\r\n  } catch (error) {\r\n    yield put(entity.failure(error, ...args));\r\n  }\r\n}\r\n\r\nexport function ignoreErrors(fn, ...args) {\r\n  return () => {\r\n    const ignoreErrorCallback = response => response;\r\n    return fn(...args).then(ignoreErrorCallback, ignoreErrorCallback);\r\n  };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { configureStore } from './store/configureStore';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename=\"/Utube\">\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport reducer from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\n\r\nexport function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(\r\n    reducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n  );\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n"],"sourceRoot":""}